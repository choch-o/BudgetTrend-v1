'use strict';

var React = require('react');
var d3 = require('d3');


module.exports = React.createClass({

  displayName: 'Cell',

  propTypes: {
    fill: React.PropTypes.string,
    width: React.PropTypes.number,
    height: React.PropTypes.number,
    label: React.PropTypes.string
  },

  bigEnough: function() {
    var props = this.props;
    if (props.label) {
      if (props.width > props.label.length * 10 && props.height > 30) {
        return true
      } else {
        return false
      }
    }
  },

  render:function() {

    var props = this.props;
    console.log("PROPS HOVER");
    console.log(props);
    console.log(this.bigEnough());
    var textStyle = {
      'display': this.bigEnough() ? 'block' : 'none',
      'textAnchor': 'middle',
      'fill': props.textColor,
      'fontSize': props.fontSize,
    };

    var tooltipStyle = {
      'display': props.hover ? 'block' : 'none',
    };

    var t = ("translate(" + props.x + ", " + props.y + "  )");

    return (
      React.createElement("g", {transform: t}, 
        React.createElement("rect", {
          className: "rd3-treemap-cell", 
          width: props.width, 
          height: props.height, 
          fill: props.fill, 
          onMouseOver: props.handleMouseOver, 
          onMouseLeave: props.handleMouseLeave}
        ), 
        React.createElement("text", {
          x: props.width / 2, 
          y: props.height / 2, 
          dy: ".35em", 
          style: textStyle, 
          className: "rd3-treemap-cell-text"
        }, 
          props.label
        ),
        React.createElement("rect", {
          width: props.label ? props.label.length * 13 : 100,
          height: 50,
          x: props.width / 2 - 5,
          y: props.height / 1.5 - 25,
          fill: 'rgba(255, 255, 255, 0.5)',
          style: tooltipStyle,
        }),
        React.createElement("text", {
          x: props.width / 2,
          y: props.height / 1.5,
          dy: ".35em",
          style: tooltipStyle,
          className: "rd3-treemap-cell-tooltip"
        },
          props.label
        )
      )
    );
  }
});
